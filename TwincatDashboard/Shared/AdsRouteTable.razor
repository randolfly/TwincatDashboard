@using TwincatDashboard.Services.IService
<MDataTable Headers="DataTableHeaders"
            ResizeMode="DataTableResizeMode.Auto"
            SelectedChanged="SelectedAdsRoueChanged"
            ShowSelect SingleSelect ItemKey="x=>x.Name"
            HideDefaultFooter Dense
            Items="AdsRouteInfos"/>

@code {
    [Parameter] public List<AdsRouteInfo> AdsRouteInfos { get; set; } = [];
    [Parameter] public EventCallback<AdsRouteInfo> SelectedAdsRoute { get; set; }

    private async Task SelectedAdsRoueChanged(IEnumerable<string> selected)
    {
        var selectedRouteList = selected.ToList();
        if (!selectedRouteList.Any()) selectedRouteList = ["Local"];
        var selectedAdsRoute = AdsRouteInfos.FirstOrDefault(
            x => x.Name == selectedRouteList.FirstOrDefault());
        Log.Information($"SelectedAdsRoute: {selectedAdsRoute?.Name}");
        await SelectedAdsRoute.InvokeAsync(selectedAdsRoute);
    }

    public readonly List<DataTableHeader<AdsRouteInfo>> DataTableHeaders =
    [
        new() { Text = "Name", Value = nameof(AdsRouteInfo.Name) },
        new() { Text = "Address", Value = nameof(AdsRouteInfo.Address) },
        new() { Text = "NetId", Value = nameof(AdsRouteInfo.NetId) }
    ];

}